#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(binding = 0, r11f_g11f_b10f) uniform image2D OutColor;
layout(binding = 1) uniform sampler2D Temporal;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 dim = imageSize(OutColor);
	if (any(greaterThanEqual(coord, dim)))
	{
	    return;
	}

	//   a
	// b c d
	//   e
	vec3 ca = texelFetch(Temporal, coord + ivec2( 0, -1), 0).rgb;
	vec3 cb = texelFetch(Temporal, coord + ivec2(-1,  0), 0).rgb;
	vec3 cc = texelFetch(Temporal, coord + ivec2( 0,  0), 0).rgb;
	vec3 cd = texelFetch(Temporal, coord + ivec2( 1,  0), 0).rgb;
	vec3 ce = texelFetch(Temporal, coord + ivec2( 0,  1), 0).rgb;

	const float sharpness = 0.2;
	vec3 color = max(vec3(0.0), cc * (1.0 + sharpness) - (ca + cb + cd + ce) * (0.25 * sharpness));
	imageStore(OutColor, ivec2(gl_GlobalInvocationID.xy), vec4(color, 0.0));
}