#version 450
#extension GL_GOOGLE_include_directive : require

#include "AtmosphereCommon.glsl"

layout(binding = 0, rgba16f) uniform image1D DirectionalLightLUT;

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main()
{
	int size = imageSize(DirectionalLightLUT);
	if (gl_GlobalInvocationID.x >= size)
	{
	    return;
	}

	float tex_coord = (float(gl_GlobalInvocationID.x) + 0.5) / float(size);
	
	// Calculate light direction
	float light_angle = TexCoordToLightAngle(tex_coord);
	vec3 light_dir = normalize(vec3(sqrt(clamp(1.0 - light_angle * light_angle, 0.0, 1.0)), light_angle, 0.0));

	vec3 ray_orig = vec3(0.0, PLANET_RADIUS + HEIGHT_ABOVE_GROUND, 0.0);

	// Calculate extinction to atmosphere
	vec2 density_to_atmosphere = DensityToAtmosphere(ray_orig, light_dir);
	vec3 extinction = Extinction(density_to_atmosphere);
	
	imageStore(DirectionalLightLUT, int(gl_GlobalInvocationID.x), vec4(extinction, 0.0));
}